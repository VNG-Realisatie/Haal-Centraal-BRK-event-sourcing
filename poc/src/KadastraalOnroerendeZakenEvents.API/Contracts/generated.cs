//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace KadastraalOnroerendeZakenEvents.API.Contracts
{
    using System = global::System;
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))")]
    public abstract class AbonnementenControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <returns>events gevonden</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("abonnement/kadastraalonroerendezaakevents")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<KadastraalOnroerendeZaakEvents>> ZoekKadastraalOnroerendeZaakEventsInAbonnement([Microsoft.AspNetCore.Mvc.FromHeader] string abonnementIdentificatie, [Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? vanafTijdstip, [Microsoft.AspNetCore.Mvc.FromQuery] string vanafEventIdentificatie, [Microsoft.AspNetCore.Mvc.FromQuery] int? maxAantalEvents = 1, [Microsoft.AspNetCore.Mvc.FromQuery] bool? inclusiefVorigToestand = false);
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))")]
    public abstract class KadastraalOnroerendeZaakEventsControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <returns>events gevonden</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaakevents")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<KadastraalOnroerendeZaakEvents>> ZoekKadastraalOnroerendeZaakEvents([Microsoft.AspNetCore.Mvc.FromQuery] string kadastraalOnroerendeZaakIdentificatie, [Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? vanafTijdstip, [Microsoft.AspNetCore.Mvc.FromQuery] string vanafEventIdentificatie, [Microsoft.AspNetCore.Mvc.FromQuery] int? maxAantalEvents = 1, [Microsoft.AspNetCore.Mvc.FromQuery] bool? inclusiefVorigToestand = false);
    
        /// <returns>event gevonden</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaakevents/{identificatie}")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<KadastraalOnroerendeZaakEvent>> RaadpleegKadastraalOnroerendeZaakEvent(string identificatie, [Microsoft.AspNetCore.Mvc.FromQuery] bool? inclusiefVorigToestand = false);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaakEvents 
    {
        /// <summary>De identificatie van het volgende event.  
        /// Deze bevat geen waarde als er op het moment van de bevraging geen volgende events zijn
        /// </summary>
        [Newtonsoft.Json.JsonProperty("volgendEventIdentificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VolgendEventIdentificatie { get; set; }
    
        /// <summary>De url waarmee de volgende events vanaf de event met identificatie = volgendEventIdentificatie kan worden bevraagd.
        /// Deze bevat geen waarde als er op het moment van de bevraging geen volgende events zijn
        /// </summary>
        [Newtonsoft.Json.JsonProperty("volgendeEventsLink", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VolgendeEventsLink { get; set; }
    
        [Newtonsoft.Json.JsonProperty("events", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KadastraalOnroerendeZaakEvent> Events { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>- vorigEventLink bevat een link waarmee de vorige KadastraalOnroerendeZaakEvent kan worden opgehaald
    /// - vorigToestandKadastraalOnroerendeZaak wordt alleen gevuld als expand=true
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaakEvent 
    {
        /// <summary>unieke identifier van een kadastraal onroerende zaak event</summary>
        [Newtonsoft.Json.JsonProperty("identificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Identificatie { get; set; }
    
        /// <summary>creatie tijdstip van event</summary>
        [Newtonsoft.Json.JsonProperty("tijdstip", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tijdstip { get; set; }
    
        /// <summary>true als alle stukdelen behorende bij de stuk aanwezig zijn t.b.v. het beoordelen van samenhangend geheel</summary>
        [Newtonsoft.Json.JsonProperty("indicatieStukCompleet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IndicatieStukCompleet { get; set; }
    
        [Newtonsoft.Json.JsonProperty("vorigEventLink", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VorigEventLink { get; set; }
    
        [Newtonsoft.Json.JsonProperty("vorigToestandKadastraalOnroerendeZaak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public KadastraalOnroerendeZaakMutatie VorigToestandKadastraalOnroerendeZaak { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nieuweToestandKadastraalOnroerendeZaak", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public KadastraalOnroerendeZaakMutatie NieuweToestandKadastraalOnroerendeZaak { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaakMutatie 
    {
        [Newtonsoft.Json.JsonProperty("identificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Identificatie { get; set; }
    
        [Newtonsoft.Json.JsonProperty("kadastraleAanduiding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string KadastraleAanduiding { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeKadastraalOnroerendeZaak_enum? Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("koopsom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TypeKoopsom Koopsom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zakelijkGerechtigden", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ZakelijkGerechtigdeCollection ZakelijkGerechtigden { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Het type zakelijk recht dat deze gerechtigde heeft. Afgeleid van de aard zakelijk recht:
    ///  * `beklemrechthouder` - 1 Beklemrechthouder
    ///  * `eigenaar` - 2 Eigenaar
    ///  * `erfpachter` - 3 Erfpachter
    ///  * `gebruik_bewoning` - 4 Rechthebbende van Gebruik en bewoning
    ///  * `grondrente` - 5 Grondrente gerechtigde
    ///  * `opstalhouder` - 7 Opstalhouder
    ///  * `vaderlandsrecht` - 9 Rechthebbende van Oud-vaderlandsrecht
    ///  * `stadsmeierrecht` - 11 Rechthebbende van Stadsmeierrecht
    ///  * `vruchtgebruiker` - 12 Vruchtgebruiker
    ///  * `erfpachter_opstalhouder` - 13 Erfpachter en opstalhouder
    ///  * `nutsvoorzieningen` - 14 Opstalhouder nutsvoorzieningen
    ///  * `twee_belastingen` - 20 Zakelijk Rechthebbende na twee of meer zakelijke belastingen
    ///  * `belasting_derde` - 21 Zakelijk rechthebbende belasting derde of volgende
    ///  * `bp_recht` - 22 BP-gerechtigde
    ///  * `nutsvoorzieningen_gedeelte` - 23 Opstalhouder Nutsvoorzieningen op gedeelte van perceel
    ///  * `artikel5_3b` - 24 Zakelijk gerechtigde als bedoeld in artikel 5, lid 3, onder b, van de Belemmeringenwet Privaatrecht op gedeelte van perceel</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public enum TypeGerechtigde_enum
    {
        [System.Runtime.Serialization.EnumMember(Value = @"beklemrechthouder")]
        Beklemrechthouder = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"eigenaar")]
        Eigenaar = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"erfpachter")]
        Erfpachter = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"gebruik_bewoning")]
        Gebruik_bewoning = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"grondrente")]
        Grondrente = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"opstalhouder")]
        Opstalhouder = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"vaderlandsrecht")]
        Vaderlandsrecht = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"stadsmeierrecht")]
        Stadsmeierrecht = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"vruchtgebruiker")]
        Vruchtgebruiker = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"erfpachter_opstalhouder")]
        Erfpachter_opstalhouder = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"nutsvoorzieningen")]
        Nutsvoorzieningen = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"twee_belastingen")]
        Twee_belastingen = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"belasting_derde")]
        Belasting_derde = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"bp_recht")]
        Bp_recht = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"nutsvoorzieningen_gedeelte")]
        Nutsvoorzieningen_gedeelte = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"artikel5_3b")]
        Artikel5_3b = 15,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public enum TypeKadastraalOnroerendeZaak_enum
    {
        [System.Runtime.Serialization.EnumMember(Value = @"appartementsrecht")]
        Appartementsrecht = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"perceel")]
        Perceel = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class TypeKoopsom 
    {
        [Newtonsoft.Json.JsonProperty("koopsom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Koopsom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("koopjaar", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Koopjaar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("indicatieMetMeerObjectenVerkregen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IndicatieMetMeerObjectenVerkregen { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigde 
    {
        [Newtonsoft.Json.JsonProperty("identificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Identificatie { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeGerechtigde_enum? Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("aanvangsdatum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? Aanvangsdatum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigdeCollection : System.Collections.ObjectModel.Collection<ZakelijkGerechtigde>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108