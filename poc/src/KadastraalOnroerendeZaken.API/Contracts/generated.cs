//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace KadastraalOnroerendeZaken.API.Contracts
{
    using System = global::System;
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))")]
    public abstract class KadastraalOnroerendeZakenControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <returns>Kadastraal Onroerende Zaken zoeken</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaken")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<System.Collections.Generic.ICollection<KadastraalOnroerendeZaak>>> ZoekKadastraalOnroerendeZaken();
    
        /// <returns>Kadastraal Onroerende Zaak aangemaakt</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaken")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<KadastraalOnroerendeZaak>> CreerKadastraalOnroerendeZaak([Microsoft.AspNetCore.Mvc.FromBody] KadastraalOnroerendeZaakMetZakelijkGerechtigdenNieuw body);
    
        /// <param name="kadastraalOnroerendeZaakIdentificatie">De unieke identificatie van een kadastraal onroerende zaak</param>
        /// <returns>Kadastraal Onroerende Zaak vervangen</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaken/{kadastraalOnroerendeZaakIdentificatie}")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> VervangKadastraalOnroerendeZaak(string kadastraalOnroerendeZaakIdentificatie, [Microsoft.AspNetCore.Mvc.FromBody] KadastraalOnroerendeZaakNieuw body);
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))")]
    public abstract class ZakelijkGerechtigdenControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <param name="kadastraalOnroerendeZaakIdentificatie">De unieke identificatie van een kadastraal onroerende zaak</param>
        /// <returns>Zakelijk Gerechtigde aangemaakt</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaken/{kadastraalOnroerendeZaakIdentificatie}/zakelijkgerechtigden")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ZakelijkGerechtigde>> CreerZakelijkGerechtigde(string kadastraalOnroerendeZaakIdentificatie, [Microsoft.AspNetCore.Mvc.FromBody] ZakelijkGerechtigdeNieuw body);
    
        /// <param name="kadastraalOnroerendeZaakIdentificatie">De unieke identificatie van een kadastraal onroerende zaak</param>
        /// <param name="zakelijkGerechtigdeIdentificatie">De unieke identificatie van een zakelijk gerechtigde</param>
        /// <returns>Zakelijk gerechtigde vervangen</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("kadastraalonroerendezaken/{kadastraalOnroerendeZaakIdentificatie}/zakelijkgerechtigden/{zakelijkGerechtigdeIdentificatie}")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> VervangZakelijkGerechtigde(string kadastraalOnroerendeZaakIdentificatie, string zakelijkGerechtigdeIdentificatie, [Microsoft.AspNetCore.Mvc.FromBody] ZakelijkGerechtigdeNieuw body);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaken : System.Collections.ObjectModel.Collection<KadastraalOnroerendeZaak>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaak 
    {
        [Newtonsoft.Json.JsonProperty("identificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Identificatie { get; set; }
    
        [Newtonsoft.Json.JsonProperty("kadastraleAanduiding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string KadastraleAanduiding { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeKadastraalOnroerendeZaak_enum? Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("koopsom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TypeKoopsom Koopsom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("zakelijkGerechtigden", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ZakelijkGerechtigdeCollection ZakelijkGerechtigden { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaakNieuw 
    {
        [Newtonsoft.Json.JsonProperty("kadastraleAanduiding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TypeKadastraleAanduiding KadastraleAanduiding { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeKadastraalOnroerendeZaak_enum? Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("koopsom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TypeKoopsom Koopsom { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class KadastraalOnroerendeZaakMetZakelijkGerechtigdenNieuw : KadastraalOnroerendeZaakNieuw
    {
        [Newtonsoft.Json.JsonProperty("zakelijkGerechtigden", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ZakelijkGerechtigdeNieuwCollection ZakelijkGerechtigden { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Het type zakelijk recht dat deze gerechtigde heeft. Afgeleid van de aard zakelijk recht:
    ///  * `beklemrechthouder` - 1 Beklemrechthouder
    ///  * `eigenaar` - 2 Eigenaar
    ///  * `erfpachter` - 3 Erfpachter
    ///  * `gebruik_bewoning` - 4 Rechthebbende van Gebruik en bewoning
    ///  * `grondrente` - 5 Grondrente gerechtigde
    ///  * `opstalhouder` - 7 Opstalhouder
    ///  * `vaderlandsrecht` - 9 Rechthebbende van Oud-vaderlandsrecht
    ///  * `stadsmeierrecht` - 11 Rechthebbende van Stadsmeierrecht
    ///  * `vruchtgebruiker` - 12 Vruchtgebruiker
    ///  * `erfpachter_opstalhouder` - 13 Erfpachter en opstalhouder
    ///  * `nutsvoorzieningen` - 14 Opstalhouder nutsvoorzieningen
    ///  * `twee_belastingen` - 20 Zakelijk Rechthebbende na twee of meer zakelijke belastingen
    ///  * `belasting_derde` - 21 Zakelijk rechthebbende belasting derde of volgende
    ///  * `bp_recht` - 22 BP-gerechtigde
    ///  * `nutsvoorzieningen_gedeelte` - 23 Opstalhouder Nutsvoorzieningen op gedeelte van perceel
    ///  * `artikel5_3b` - 24 Zakelijk gerechtigde als bedoeld in artikel 5, lid 3, onder b, van de Belemmeringenwet Privaatrecht op gedeelte van perceel</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public enum TypeGerechtigde_enum
    {
        [System.Runtime.Serialization.EnumMember(Value = @"beklemrechthouder")]
        Beklemrechthouder = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"eigenaar")]
        Eigenaar = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"erfpachter")]
        Erfpachter = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"gebruik_bewoning")]
        Gebruik_bewoning = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"grondrente")]
        Grondrente = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"opstalhouder")]
        Opstalhouder = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"vaderlandsrecht")]
        Vaderlandsrecht = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"stadsmeierrecht")]
        Stadsmeierrecht = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"vruchtgebruiker")]
        Vruchtgebruiker = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"erfpachter_opstalhouder")]
        Erfpachter_opstalhouder = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"nutsvoorzieningen")]
        Nutsvoorzieningen = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"twee_belastingen")]
        Twee_belastingen = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"belasting_derde")]
        Belasting_derde = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"bp_recht")]
        Bp_recht = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"nutsvoorzieningen_gedeelte")]
        Nutsvoorzieningen_gedeelte = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"artikel5_3b")]
        Artikel5_3b = 15,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public enum TypeKadastraalOnroerendeZaak_enum
    {
        [System.Runtime.Serialization.EnumMember(Value = @"appartementsrecht")]
        Appartementsrecht = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"perceel")]
        Perceel = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class TypeKadastraleAanduiding 
    {
        /// <summary>Nummer dat het kadastraal object uniek identificeert als een 
        /// appartementsrecht binnen het complex.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("appartementsrechtVolgnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AppartementsrechtVolgnummer { get; set; }
    
        /// <summary>De kadastrale gemeente, deel van de kadastrale aanduiding van de onroerende zaak.  
        /// De waarden komen uit een Waardelijst( http://www.kadaster.nl/schemas/waardelijsten/KadastraleGemeente).
        /// Elke kadastrale gemeentenaam is uniek.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("kadastraleGemeenteCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? KadastraleGemeenteCode { get; set; }
    
        /// <summary>Het perceelnummer dat een geheel perceel of een complex uniek 
        /// identificeert binnen de sectie. Per kadastrale gemeente en per sectie 
        /// heeft een perceel een perceelnummer oplopend door de jaren heen.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("perceelnummer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(1, 99999)]
        public int? Perceelnummer { get; set; }
    
        /// <summary>Sectie is een onderverdeling van de kadastrale gemeente, bedoeld 
        /// om het werk van de meetdienst en de kadastrale kaarten overzichtelijk 
        /// te houden. Per kadastrale gemeente zijn er max. 26x26 secties . Elke 
        /// sectie heeft een of twee letters
        /// </summary>
        [Newtonsoft.Json.JsonProperty("sectie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string Sectie { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class TypeKoopsom 
    {
        [Newtonsoft.Json.JsonProperty("koopsom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Koopsom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("koopjaar", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Koopjaar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("indicatieMetMeerObjectenVerkregen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IndicatieMetMeerObjectenVerkregen { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigde : ZakelijkGerechtigdeNieuw
    {
        [Newtonsoft.Json.JsonProperty("identificatie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Identificatie { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigdeCollection : System.Collections.ObjectModel.Collection<ZakelijkGerechtigde>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigdeNieuw 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TypeGerechtigde_enum? Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("aanvangsdatum", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? Aanvangsdatum { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ZakelijkGerechtigdeNieuwCollection : System.Collections.ObjectModel.Collection<ZakelijkGerechtigdeNieuw>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108